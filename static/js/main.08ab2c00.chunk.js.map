{"version":3,"sources":["components/register/file-uploader.jsx","clients/apiClient.js","components/register/index.jsx","components/search.jsx","components/home.jsx","components/navigation.jsx","components/success.jsx","App.js","reportWebVitals.js","index.js"],"names":["FileUploader","onFileChanged","files","useState","errors","onError","t","useFormatMessage","multiple","maxSize","multipleMaxSize","multipleMaxCount","accept","onSuccess","newFiles","browseFiles","getDropZoneProps","getLabelProps","className","onClick","id","map","file","name","error","type","API","process","performApi","path","a","params","window","grecaptcha","execute","action","replace","recaptcha_token","fetch","headers","console","uploadFile","form","FormData","append","src","method","body","response","json","log","uploadAllFiles","Promise","all","f","registerBikes","bikeDetails","JSON","stringify","searchBikes","bikeId","bike","result","renderField","control","label","rules","FormControl","fullWidth","variant","as","TextField","helperText","message","defaultValue","withRouter","history","useForm","defaultValues","firstName","lastName","phone","secondary_phone","city","bike_id","brand","color","acceptedTerms","handleSubmit","register","formState","reset","setError","isSubmitting","isDirty","fileResult","uploadFiles","useEffect","e","onSubmit","data","bikeDocs","assets","doc","Object","entries","forEach","k","v","push","required","pattern","value","Button","disabled","useStyles","makeStyles","theme","root","margin","spacing","searchRoot","height","display","flexDirection","searchInput","searchButton","bikesRoot","buttonProgress","green","position","top","left","marginTop","marginLeft","searchContainer","width","Search","props","classes","onBikeId","loading","isLoading","onResult","searchError","onSearchError","onSearch","setTimeout","onChange","target","CircularProgress","size","Home","flexGrow","menuButton","marginRight","title","list","pathToTitle","location","drawerOpen","toggleDrawer","AppBar","Toolbar","IconButton","edge","aria-label","Typography","pathname","Drawer","anchor","open","role","onKeyDown","List","ListItem","button","ListItemIcon","ListItemText","primary","SuccessComponent","App","component","Register","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","messages","messages_en","language","navigator","split","ReactDOM","render","CssBaseline","locale","defaultLocale","document","getElementById"],"mappings":"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","file":"static/js/main.08ab2c00.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport Files from \"react-butterfiles\";\nimport {useFormatMessage} from \"react-intl-hooks\";\n\nconst FileUploader = ({onFileChanged, files=[]}) => {\n    const [errors, onError] = useState([])\n    const t = useFormatMessage();\n    return (<Files\n        multiple={true}\n        maxSize=\"2mb\"\n        multipleMaxSize=\"10mb\"\n        multipleMaxCount={4}\n        accept={[\"application/pdf\", \"image/jpg\", \"image/jpeg\", \"image/png\"]}\n        onSuccess={(newFiles) => {\n            onFileChanged([...files, ...newFiles])\n        }}\n        onError={onError}\n    >\n        {({browseFiles, getDropZoneProps, getLabelProps}) => (\n            <>\n                <div {...getDropZoneProps({className: \"myDropZone\"})} onClick={browseFiles}>\n                    <span>{t({id: \"dropzone.helper\"})}</span>\n                </div>\n                <ol>\n                    {files.map(file => (\n                        <li key={file.name}>{file.name}</li>\n                    ))}\n                    {errors.map(error => (\n                        <li key={error.file.name}>\n                            {error.file.name} - {error.type}\n                        </li>\n                    ))}\n                </ol>\n            </>\n        )}\n    </Files>)\n}\n\nexport default FileUploader","const API = process.env.REACT_APP_API_URL || \"http://localhost:3000/bikeapi\"\nconst UPLOAD_FILE = API + \"/files\"\nconst REGISTER_BIKES = API + \"/bike\"\nconst SEARCH = API + \"/bike\"\n\nconst performApi = async (path, params = {}) => {\n    try {\n        const recaptcha_token = await window.grecaptcha.execute(process.env.REACT_APP_RECAPTCHA_SITE_URL, {action: path.replace(API, '')})\n        return await fetch(path, {...params, headers: {...(params.headers || {}), \"x-token\": recaptcha_token}})\n    } catch (e) {\n        console.error(e)\n    }\n\n\n}\nexport const uploadFile = async (file) => {\n    try {\n        let form = new FormData()\n        form.append('file', file.src.file)\n        const response = await performApi(UPLOAD_FILE, {\n            method: \"POST\",\n            body: form\n        })\n        return response.json()\n    } catch (error) {\n        console.log(error)\n        return {error}\n    }\n}\n\nexport const uploadAllFiles = async (files) => {\n    return await Promise.all(files.map(f => uploadFile(f)))\n}\n\nexport const registerBikes = async (bikeDetails) => {\n    try {\n        const response = await performApi(REGISTER_BIKES, {\n            method: \"POST\",\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({bikeDetails})\n        })\n        return response.json();\n    } catch (e) {\n        return {}\n    }\n\n}\n\nexport const searchBikes = async (bikeId) => {\n    try {\n        const response = await performApi(SEARCH + `/${bikeId}`)\n        const {result: {bike}} = await response.json()\n        return bike\n    } catch (e) {\n\n    }\n\n}","import {Controller, useForm} from \"react-hook-form\";\nimport React, {useEffect, useState} from \"react\";\nimport {useFormatMessage} from \"react-intl-hooks\";\nimport FileUploader from \"./file-uploader\";\nimport './index.css'\nimport {registerBikes, uploadAllFiles} from \"../../clients/apiClient\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Button from \"@material-ui/core/Button\";\nimport {withRouter} from \"react-router-dom\";\n\nconst renderField = ({control, errors, t, name, label, rules}) => (\n    <FormControl fullWidth variant=\"outlined\" className={\"formField\"}>\n        <Controller\n            name={name}\n            as={\n                <TextField\n                    id={name}\n                    helperText={errors[name] ? errors[name].message : null}\n                    label={t({id: label})}\n                    error={!!errors[name]}\n                />\n            }\n            control={control}\n            defaultValue=\"\"\n            rules={rules}\n        />\n    </FormControl>\n)\n\nconst Register = ({history}) => {\n    const defaultValues = {\n        firstName: \"omer\",\n        lastName: \"shacham\",\n        phone: \"0506652800\",\n        secondary_phone: \"0506652800\",\n        city: \"tel aviv\",\n        bike_id: \"1234\",\n        brand: \"trek\",\n        color: \"white\",\n        acceptedTerms: true,\n\n    }\n    const {register, handleSubmit, errors, reset, formState, setError, control} = useForm({defaultValues});\n    const {isDirty, isSubmitting} = formState;\n    const [files, onFileChanged] = useState([])\n    const [fileResult, uploadFiles] = useState(null)\n    const t = useFormatMessage();\n    useEffect((e) => {\n        console.log(errors)\n    }, [errors])\n    const onSubmit = async (data) => {\n        let bikeDocs = fileResult\n        if (!bikeDocs) {\n            bikeDocs = await uploadAllFiles(files)\n            uploadFiles(bikeDocs)\n        }\n\n        const assets = bikeDocs.map(doc => {\n            const {file} = doc\n            return file\n        })\n        console.log(\"imhere\")\n        const {result, error} = await registerBikes( {\n            assets,\n            ...data\n        })\n        error && Object.entries(error).forEach(([k, v]) => {\n            setError(k, {type: \"server\", message: v})\n        });\n        result && history.push(\"/success\");\n\n    }\n    return (<form onSubmit={handleSubmit(onSubmit)}>\n        <div className={\"formFields\"}>\n            {renderField(\n                {\n                    control,\n                    errors,\n                    t,\n                    name: \"firstName\",\n                    label: \"register.first_name.title\",\n                    rules: {required: t({id: \"register.first_name.required\"})}\n                }\n            )}\n            {renderField(\n                {\n                    control,\n                    errors,\n                    t,\n                    name: \"lastName\",\n                    label: \"register.last_name.title\",\n                    rules: {required: t({id: \"register.last_name.required\"})}\n                }\n            )}\n            {renderField(\n                {\n                    control,\n                    errors,\n                    t,\n                    name: \"phone\",\n                    label: \"register.phone.title\",\n                    rules: {\n                        required: t({id: \"register.phone.required\"}),\n                        pattern: {value: /^\\d+$/i, message: t({id: \"register.phone.invalid\"})}\n                    }\n                }\n            )}\n            {renderField(\n                {\n                    control,\n                    errors,\n                    t,\n                    name: \"secondary_phone\",\n                    label: \"register.secondary_phone.title\",\n                    rules: {pattern: {value: /^\\d*$/i, message: t({id: \"register.secondary_phone.invalid\"})}}\n                }\n            )}\n            {renderField(\n                {\n                    control,\n                    errors,\n                    t,\n                    name: \"bike_id\",\n                    label: \"register.bike_id.title\",\n                    rules: {required: t({id: \"register.bike_id.required\"})}\n                }\n            )}\n            {renderField(\n                {\n                    control,\n                    errors,\n                    t,\n                    name: \"city\",\n                    label: \"register.city.title\",\n                    rules: {required: t({id: \"register.city.required\"})}\n                }\n            )}\n            {renderField(\n                {\n                    control,\n                    errors,\n                    t,\n                    name: \"brand\",\n                    label: \"register.brand.title\",\n                    rules: {required: t({id: \"register.brand.required\"})}\n                }\n            )}\n            {renderField(\n                {\n                    control,\n                    errors,\n                    t,\n                    name: \"color\",\n                    label: \"register.color.title\",\n                    rules: {required: t({id: \"register.color.required\"})}\n                }\n            )}\n            <div>\n                <FileUploader files={files} onFileChanged={onFileChanged}/>\n            </div>\n            <div className={\"spacer\"}></div>\n            <div>\n                <Button variant=\"contained\" fullWidth color=\"primary\" disabled={isSubmitting}\n                        type=\"submit\">\n                    Submit\n                </Button>\n            </div>\n        </div>\n\n    </form>)\n}\n\nexport default withRouter(Register)","import React, {useState} from \"react\";\nimport {searchBikes} from \"../clients/apiClient\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport green from \"@material-ui/core/colors/green\";\nimport {useFormatMessage} from \"react-intl-hooks\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(2),\n    },\n    searchRoot: {\n        height: \"30%\",\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    searchInput: {\n        margin: theme.spacing(2),\n    },\n    searchButton: {},\n    bikesRoot: {\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    searchContainer: {\n        width: \"50%\",\n        margin: \"auto\",\n        position: 'relative',\n    }\n}));\nconst Search = (props) => {\n    const classes = useStyles()\n    const t = useFormatMessage();\n    const [bikeId, onBikeId] = useState('')\n    const [loading, isLoading] = useState(false)\n    const [result, onResult] = useState(null)\n    const [searchError, onSearchError] = useState(null)\n    const onSearch = async () => {\n        isLoading(true)\n        onSearchError(null)\n        onResult(null)\n        const result = await searchBikes(bikeId)\n\n        setTimeout(() => {\n            if (!result) {\n                onSearchError(`Cant find bike with serial: ${bikeId}`)\n            }\n            onResult(result)\n            isLoading(false)\n        }, 2000)\n\n    }\n    return (\n        <div className={classes.root}>\n            <div className={classes.searchRoot}>\n                <TextField className={classes.searchInput} label=\"Bike Serial Number\"\n                           error={!!searchError}\n                           helperText={searchError}\n                           onChange={(e) => onBikeId(e.target.value)} value={bikeId}/>\n                <div className={classes.searchContainer}>\n                    <Button className={classes.searchButton} variant=\"contained\" fullWidth color=\"primary\"\n                            disabled={loading}\n                            onClick={onSearch}>\n                        {\"Search!\"}\n                    </Button>\n                    {loading && <CircularProgress size={24} className={classes.buttonProgress}/>}\n                </div>\n\n\n            </div>\n            {result && <div className={classes.bikesRoot}>\n                {Object.entries(result).map(([k, v]) => {\n                    return (<div key={k}>{t({id: `result.${k}`})}: {v}</div>)\n                })}\n            </div>}\n        </div>\n    )\n}\n\nexport default Search","const Home = (props) => (\n    <div>Home</div>\n)\n\nexport default Home","import AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ReportIcon from \"@material-ui/icons/Report\";\nimport React, {useEffect, useState} from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {useFormatMessage} from \"react-intl-hooks\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    list: {\n        width: 250,\n    },\n}));\nconst pathToTitle = {\n    \"/register\": \"path.register.title\",\n    \"/search\": \"path.search.title\"\n}\n\nconst Navigation = ({history, location}) => {\n    const t = useFormatMessage();\n    const classes = useStyles()\n    const [drawerOpen, toggleDrawer] = useState(false)\n    return (\n        <>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\"\n                                onClick={() => toggleDrawer(true)}>\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        {t({id: pathToTitle[location.pathname] || \"path.home\"})}\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                anchor={\"left\"}\n                open={drawerOpen}\n            >\n                <div\n                    className={classes.list}\n                    role=\"presentation\"\n                    onClick={() => toggleDrawer(false)}\n                    onKeyDown={() => toggleDrawer(false)}\n                >\n                    <List>\n                        <ListItem button key={\"search\"} onClick={() => history.push(\"/search\")}>\n                            <ListItemIcon><SearchIcon/></ListItemIcon>\n                            <ListItemText primary={t({id: \"path.search.title\"})}/>\n                        </ListItem>\n                        <ListItem button key={\"register\"} onClick={() => history.push(\"/register\")}>\n                            <ListItemIcon><AddIcon/></ListItemIcon>\n                            <ListItemText primary={t({id: \"path.register.title\"})}/>\n                        </ListItem>\n                        <ListItem button key={\"report\"}>\n                            <ListItemIcon><ReportIcon/></ListItemIcon>\n                            <ListItemText primary={t({id: \"path.report.title\"})}/>\n                        </ListItem>\n                    </List>\n                </div>\n            </Drawer>\n        </>\n    )\n}\n\nexport default withRouter(Navigation)","\nconst SuccessComponent = () => (\n    <div>\n        Good Job\n    </div>\n)\n\nexport default SuccessComponent","import React, {useState} from 'react';\nimport './App.css';\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch,\n    Link,\n    useHistory\n} from 'react-router-dom';\nimport Register from \"./components/register/index\";\nimport Search from \"./components/search\";\nimport Home from \"./components/home\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AddIcon from '@material-ui/icons/Add';\nimport ReportIcon from '@material-ui/icons/Report';\nimport SearchIcon from '@material-ui/icons/Search';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Navigation from \"./components/navigation\";\nimport SuccessComponent from \"./components/success\";\n\n\nfunction App() {\n\n    return (\n        <div>\n            <Router>\n                <div className=\"App\">\n                    <Navigation/>\n                    <Switch>\n                        <Route path=\"/success\" component={SuccessComponent}/>\n                        <Route path=\"/register\" component={Register}/>\n                        <Route path=\"/search\" component={Search}/>\n                        <Route component={Home}/>\n                    </Switch>\n                </div>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {IntlProvider} from \"react-intl\";\nimport messages_en from \"./translations/en.json\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nconst messages = {\n    'en': messages_en\n};\nconst language = navigator.language.split(/[-_]/)[0];\n\nReactDOM.render(\n    <>\n        <CssBaseline />\n        <IntlProvider locale='en' messages={messages[language]} defaultLocale=\"en\">\n            <App/>\n        </IntlProvider>\n    </>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}